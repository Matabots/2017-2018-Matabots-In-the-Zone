#include "main.h"
#include "robot.h"
#include <API.h>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void setupBot(robot& bot){
  bot.drive.addLeftMotor(motor2, not_reversed);
  bot.drive.addLeftMotor(motor8, is_reversed);
  bot.drive.addRightMotor(motor3, not_reversed);
  bot.drive.addRightMotor(motor9, is_reversed);
  bot.lift.addGroupOneMotor(motor6, is_reversed);
  bot.lift.addGroupOneMotor(motor7, not_reversed);
  bot.lift.addGroupTwoMotor(motor5, not_reversed);
  bot.claw.setPort(motor4);
  bot.claw.setDirection(not_reversed);
  bot.digital.setRightEncoder(digital3, digital4, not_reversed);
  bot.digital.setLeftEncoder(digital1, digital2, not_reversed);
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


void autonomous() {
  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////basic bot setup////////////////////////////////////////////////////////////
    // robot bot = robot();
    // setupBot(bot);
    // bot.digital.resetDriveEncoders();
  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  while(true){
  printf("%d\n",  joystickGetAnalog ( 3, 1));
  printf("%s\n", "this si sa test");
    delay(400);
  }
}
